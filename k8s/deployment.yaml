apiVersion: apps/v1
kind: Deployment
metadata:
  name: prismscope-website
  namespace: external-web
  labels:
    app: prismscope-website
    tier: frontend
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: prismscope-website
      tier: frontend
  template:
    metadata:
      labels:
        app: prismscope-website
        tier: frontend
    spec:
      # Security context for pod
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      
      containers:
      - name: prismscope-website
        image: gcr.io/ai-problem-statement/prismscope-website:latest
        imagePullPolicy: Always
        
        # Security context for container
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        
        # Resource limits and requests
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        
        # Container port
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        
        # Environment variables
        env:
        - name: NODE_ENV
          value: "production"
        
        # Volume mounts for writable directories
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: tmp-nginx-volume
          mountPath: /tmp/nginx
        - name: var-cache-nginx
          mountPath: /var/cache/nginx
        - name: var-log-nginx
          mountPath: /var/log/nginx
        - name: var-run
          mountPath: /var/run
      
      # Volumes for writable directories (required for read-only root filesystem)
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: tmp-nginx-volume
        emptyDir: {}
      - name: var-cache-nginx
        emptyDir: {}
      - name: var-log-nginx
        emptyDir: {}
      - name: var-run
        emptyDir: {}
      
      # Pod disruption settings
      terminationGracePeriodSeconds: 30
      
      # Node selection (optional - for specific node requirements)
      nodeSelector:
        kubernetes.io/os: linux